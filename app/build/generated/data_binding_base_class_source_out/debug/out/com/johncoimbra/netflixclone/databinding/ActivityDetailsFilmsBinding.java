// Generated by view binder compiler. Do not edit!
package com.johncoimbra.netflixclone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.johncoimbra.netflixclone.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailsFilmsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ImageView cover;

  @NonNull
  public final TextView description;

  @NonNull
  public final ImageView playVideo;

  @NonNull
  public final RecyclerView recyclerOtherFilms;

  @NonNull
  public final TextView textCast;

  @NonNull
  public final TextView textFilmsSeries;

  @NonNull
  public final TextView titleFilm;

  @NonNull
  public final Toolbar toolbarDetails;

  private ActivityDetailsFilmsBinding(@NonNull NestedScrollView rootView, @NonNull ImageView cover,
      @NonNull TextView description, @NonNull ImageView playVideo,
      @NonNull RecyclerView recyclerOtherFilms, @NonNull TextView textCast,
      @NonNull TextView textFilmsSeries, @NonNull TextView titleFilm,
      @NonNull Toolbar toolbarDetails) {
    this.rootView = rootView;
    this.cover = cover;
    this.description = description;
    this.playVideo = playVideo;
    this.recyclerOtherFilms = recyclerOtherFilms;
    this.textCast = textCast;
    this.textFilmsSeries = textFilmsSeries;
    this.titleFilm = titleFilm;
    this.toolbarDetails = toolbarDetails;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailsFilmsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailsFilmsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_details_films, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailsFilmsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cover;
      ImageView cover = rootView.findViewById(id);
      if (cover == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = rootView.findViewById(id);
      if (description == null) {
        break missingId;
      }

      id = R.id.play_video;
      ImageView playVideo = rootView.findViewById(id);
      if (playVideo == null) {
        break missingId;
      }

      id = R.id.recycler_other_films;
      RecyclerView recyclerOtherFilms = rootView.findViewById(id);
      if (recyclerOtherFilms == null) {
        break missingId;
      }

      id = R.id.text_cast;
      TextView textCast = rootView.findViewById(id);
      if (textCast == null) {
        break missingId;
      }

      id = R.id.text_films_series;
      TextView textFilmsSeries = rootView.findViewById(id);
      if (textFilmsSeries == null) {
        break missingId;
      }

      id = R.id.title_film;
      TextView titleFilm = rootView.findViewById(id);
      if (titleFilm == null) {
        break missingId;
      }

      id = R.id.toolbar_details;
      Toolbar toolbarDetails = rootView.findViewById(id);
      if (toolbarDetails == null) {
        break missingId;
      }

      return new ActivityDetailsFilmsBinding((NestedScrollView) rootView, cover, description,
          playVideo, recyclerOtherFilms, textCast, textFilmsSeries, titleFilm, toolbarDetails);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
